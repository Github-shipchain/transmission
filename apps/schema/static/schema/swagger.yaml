openapi: 3.0.0
servers:
- url: https://transmission.shipchain.io/
  description: ShipChain Transmission API
info:
  version: 1.0.0
  title: ShipChain Transmission API
  description: |
    The ShipChain Transmission API is a microservice developed to provide a traditional REST abstraction for interactions with
    the Ethereum smart contract platform. Transmission facilitates the reliable submission and retrying of asynchronous
    transactions sent to the ShipChain Ethereum smart contracts. Transmission is also responsible for the implementation
    of the Shipment-related business logic required for the ShipChain Portal and AXLE Gateway projects.
    # Data Format
    All response payloads will be formatted using the [JSON API](http://jsonapi.org) specification.
    Requests can be made to Transmission using `application/json`, `application/vnd.api+json`, and `multipart/form-data`,
    formatted as documented below.
    # Errors
    The API uses standard HTTP status codes and the [JSON API](http://jsonapi.org/examples/#error-objects) specification to indicate the success or failure of the API call. The body of the response will be JSON in the following format:
    ```
    {
      "errors": [
        {
          "status": "422",
          "source": { "pointer": "/data/attributes/volume" },
          "detail": "Volume does not, in fact, go to 11."
        }
      ]
    }
    ```
  x-logo:
    url: '/static/schema/shipchain-logo.png'

paths:
  /api/v1/shipments/:
    $ref: components/paths/shipments/shipments.yaml

  /api/v1/shipments/{shipment_id}/:
    $ref: components/paths/shipments/shipmentId.yaml

  /api/v1/shipments/{shipment_id}/documents/:
    $ref: components/paths/documents/documents.yaml

  /api/v1/shipments/{shipment_id}/documents/{document_id}/:
    $ref: components/paths/documents/documentId.yaml

  /api/v1/shipments/{shipment_id}/transactions/:
    $ref: components/paths/shipments/transactions.yaml

  /api/v1/shipments/{shipment_id}/permission_links/:
    $ref: components/paths/permissionLinks/permissionLinks.yaml

  /api/v1/shipments/{shipment_id}/permission_links/{permission_links_id}/:
    $ref: components/paths/permissionLinks/permissionLinksId.yaml

  /api/v1/shipments/{shipment_id}/tracking/:
    $ref: components/paths/shipments/tracking.yaml

  /api/v1/shipments/{shipment_id}/history/:
    $ref: components/paths/shipments/shipmentHistory.yaml

  /api/v1/jobs/:
    $ref: components/paths/jobs/jobs.yaml

  /api/v1/jobs/{job_id}/:
    $ref: components/paths/jobs/jobId.yaml

  /api/v1/transactions/:
    $ref: components/paths/transactions/transactions.yaml

  /api/v1/transactions/{transaction_hash}/:
    $ref: components/paths/transactions/transactionHash.yaml

  /api/v1/devices/{device_id}/tracking/:
    $ref: components/paths/devices/deviceTracking.yaml

  /api/v1/devices/status/:
    $ref: components/paths/devices/deviceStatus.yaml

components:
  securitySchemes:
    $ref: components/securitySchemes.yaml

security:
- JWT: []
tags:
- name: Shipments
  description: >
    Shipments are the core entity in the ShipChain Transmission service. This is a collection of endpoints related to managing shipments.
- name: AsyncJobs
  description: >
    AsyncJobs model an asynchronous interaction with ShipChain Engine. They also contain references to the state of an associated Ethereum Transaction.
- name: Transactions
  description: >
    Transaction entities contain read-only data about Ethereum Transactions and Transaction Receipts.
- name: Documents
  description: >
    Documents are entities that allow documents and media objects management within ShipChain Transmission service.
