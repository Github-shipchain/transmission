# Generated by Django 2.1.7 on 2019-04-10 16:48

import apps.utils
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('shipments', '0034_alter_shipment_location_definition'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalDevice',
            fields=[
                ('id', models.CharField(db_index=True, max_length=36)),
                ('certificate_id', models.CharField(db_index=True, max_length=255, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical device',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocation',
            fields=[
                ('id', models.CharField(db_index=True, default=apps.utils.random_id, max_length=36)),
                ('name', models.CharField(max_length=255)),
                ('address_1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Invalid ISO 3166-1 alpha-2 country code.', regex='^A[^ABCHJKNPVY]|B[^CKPUX]|C[^BEJPQST]|D[EJKMOZ]|E[CEGHRST]|F[IJKMOR]|G[^CJKOVXZ]|H[KMNRTU]|I[DEL-OQ-T]|J[EMOP]|K[EGHIMNPRWYZ]|L[ABCIKR-VY]|M[^BIJ]|N[ACEFGILOPRUZ]|OM|P[AE-HK-NRSTWY]|QA|R[EOSUW]|S[^FPQUW]|T[^ABEIPQSUXY]|U[AGMSYZ]|V[ACEGINU]|WF|WS|YE|YT|Z[AMW]')])),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}')])),
                ('fax_number', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator(message='Invalid phone number.', regex='^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}')])),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(null=True, srid=4326)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical location',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalShipment',
            fields=[
                ('id', models.CharField(db_index=True, default=apps.utils.random_id, max_length=36)),
                ('owner_id', models.CharField(max_length=36)),
                ('storage_credentials_id', models.CharField(max_length=36)),
                ('vault_id', models.CharField(max_length=36, null=True)),
                ('vault_uri', models.CharField(max_length=255, null=True)),
                ('shipper_wallet_id', models.CharField(max_length=36)),
                ('carrier_wallet_id', models.CharField(max_length=36)),
                ('moderator_wallet_id', models.CharField(max_length=36, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('contract_version', models.CharField(max_length=36)),
                ('updated_by', models.CharField(max_length=36, null=True)),
                ('carriers_scac', models.CharField(blank=True, max_length=255, null=True)),
                ('forwarders_scac', models.CharField(blank=True, max_length=255, null=True)),
                ('nvocc_scac', models.CharField(blank=True, max_length=255, null=True)),
                ('shippers_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('forwarders_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('forwarders_shipper_id', models.CharField(blank=True, max_length=255, null=True)),
                ('carriers_instructions', models.CharField(blank=True, max_length=255, null=True)),
                ('special_instructions', models.CharField(blank=True, max_length=255, null=True)),
                ('pro_number', models.CharField(blank=True, max_length=255, null=True)),
                ('bill_master', models.CharField(blank=True, max_length=255, null=True)),
                ('bill_house', models.CharField(blank=True, max_length=255, null=True)),
                ('bill_subhouse', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_terms', models.CharField(blank=True, max_length=255, null=True)),
                ('vessel_name', models.CharField(blank=True, max_length=255, null=True)),
                ('voyage_number', models.CharField(blank=True, max_length=255, null=True)),
                ('mode_of_transport_code', models.CharField(blank=True, max_length=255, null=True)),
                ('package_qty', models.IntegerField(blank=True, null=True)),
                ('weight_gross', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('volume', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('container_qty', models.IntegerField(blank=True, null=True)),
                ('weight_dim', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('weight_chargeable', models.DecimalField(blank=True, decimal_places=4, max_digits=9, null=True)),
                ('docs_received_act', models.DateTimeField(blank=True, null=True)),
                ('docs_approved_act', models.DateTimeField(blank=True, null=True)),
                ('pickup_appt', models.DateTimeField(blank=True, null=True)),
                ('pickup_est', models.DateTimeField(blank=True, null=True)),
                ('pickup_act', models.DateTimeField(blank=True, null=True)),
                ('loading_est', models.DateTimeField(blank=True, null=True)),
                ('loading_act', models.DateTimeField(blank=True, null=True)),
                ('departure_est', models.DateTimeField(blank=True, null=True)),
                ('departure_act', models.DateTimeField(blank=True, null=True)),
                ('delivery_appt_act', models.DateTimeField(blank=True, null=True)),
                ('port_arrival_est', models.DateTimeField(blank=True, null=True)),
                ('port_arrival_act', models.DateTimeField(blank=True, null=True)),
                ('delivery_est', models.DateTimeField(blank=True, null=True)),
                ('delivery_act', models.DateTimeField(blank=True, null=True)),
                ('delivery_attempt', models.DateTimeField(blank=True, null=True)),
                ('cancel_requested_date_act', models.DateTimeField(blank=True, null=True)),
                ('cancel_confirmed_date_act', models.DateTimeField(blank=True, null=True)),
                ('customs_filed_date_act', models.DateTimeField(blank=True, null=True)),
                ('customs_hold_date_act', models.DateTimeField(blank=True, null=True)),
                ('customs_release_date_act', models.DateTimeField(blank=True, null=True)),
                ('container_type', models.CharField(blank=True, max_length=255, null=True)),
                ('port_arrival_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('final_port_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('import_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('lading_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('origin_locode', models.CharField(blank=True, max_length=255, null=True)),
                ('us_routed', models.NullBooleanField()),
                ('import_customs_mode', models.CharField(blank=True, max_length=255, null=True)),
                ('us_export_port', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.CharField(default='1.2.1', max_length=255)),
                ('trailer_number', models.CharField(blank=True, max_length=255, null=True)),
                ('seal_number', models.CharField(blank=True, max_length=255, null=True)),
                ('is_master_bol', models.NullBooleanField()),
                ('nmfc_class', models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator(message='Invalid nmfc class number.', regex='^1[015]0$|^1[27]5$|^2[05]0$|^[345]00$|^[567]0$|^[568]5$|^92\\.5$|^77\\.5$')])),
                ('is_hazmat', models.NullBooleanField()),
                ('customer_fields', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('bill_to_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='shipments.Location')),
                ('device', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='shipments.Device')),
                ('final_destination_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='shipments.Location')),
            ],
            options={
                'verbose_name': 'historical shipment',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ShallowUser',
            fields=[
                ('id', models.CharField(max_length=36, primary_key=True, serialize=False)),
                ('username', models.EmailField(max_length=254)),
            ],
        ),
        migrations.AddField(
            model_name='historicalshipment',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='shipments.ShallowUser'),
        ),
        migrations.AddField(
            model_name='historicalshipment',
            name='ship_from_location',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='shipments.Location'),
        ),
        migrations.AddField(
            model_name='historicalshipment',
            name='ship_to_location',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='shipments.Location'),
        ),
        migrations.AddField(
            model_name='historicallocation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='shipments.ShallowUser'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='shipments.ShallowUser'),
        ),
    ]
